import processing
from qgis.core import QgsProject

# 1. Seleccionar la capa cargada en QGIS por su nombre
layer_name = "MiShapefile"  # Reemplaza con el nombre real de tu capa
input_layers = QgsProject.instance().mapLayersByName(layer_name)
if not input_layers:
    raise Exception(f'La capa "{layer_name}" no se encuentra cargada en el proyecto.')
input_layer = input_layers[0]

# 2. Disolver todas las geometrías para unir todos los polígonos en una sola entidad
dissolve_params = {
    'INPUT': input_layer,
    'FIELD': [],        # Disolver sin basarse en ningún campo
    'OUTPUT': 'memory:' # Guardar el resultado en memoria
}
dissolve_result = processing.run("native:dissolve", dissolve_params)
dissolved_layer = dissolve_result['OUTPUT']

# 3. Extraer la frontera externa de la entidad disuelta
boundary_params = {
    'INPUT': dissolved_layer,
    'OUTPUT': 'memory:'
}
boundary_result = processing.run("native:boundary", boundary_params)
boundary_layer = boundary_result['OUTPUT']

# 4. Polygonizar la capa de líneas para obtener un polígono del contorno externo
polygonize_params = {
    'INPUT': boundary_layer,
    'OUTPUT': 'memory:'
}
polygonize_result = processing.run("native:polygonize", polygonize_params)
polygon_layer = polygonize_result['OUTPUT']

# 5. Agregar la capa de polígono resultante al proyecto QGIS
QgsProject.instance().addMapLayer(polygon_layer)
print("El contorno externo como polígono se ha extraído y agregado al proyecto.")
